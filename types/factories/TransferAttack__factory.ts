/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TransferAttack,
  TransferAttackInterface,
} from "../TransferAttack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_kingOfEther",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "kingOfEther",
    outputs: [
      {
        internalType: "contract KingOfEther",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104903803806104908339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6103828061010e6000396000f3fe60806040526004361061002d5760003560e01c806388fcf0b3146100405780639e5faafc1461006b5761002e565b5b34801561003a57600080fd5b50600080fd5b34801561004c57600080fd5b50610055610075565b6040516100629190610272565b60405180910390f35b610073610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636886bf1c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010257600080fd5b505afa158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a9190610217565b905034811061017e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101759061028d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166369934ee7346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101e657600080fd5b505af11580156101fa573d6000803e3d6000fd5b505050505050565b60008151905061021181610335565b92915050565b60006020828403121561022957600080fd5b600061023784828501610202565b91505092915050565b610249816102e8565b82525050565b600061025c601a836102ad565b91506102678261030c565b602082019050919050565b60006020820190506102876000830184610240565b92915050565b600060208201905081810360008301526102a68161024f565b9050919050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102f3826102fa565b9050919050565b6000610305826102be565b9050919050565b7f4e6f7420656e6f75676820657468657220746f2061747461636b000000000000600082015250565b61033e816102de565b811461034957600080fd5b5056fea2646970667358221220eba2a77e79d4b3bca4188449ef8a0fd2694b03b58ea4670a30d358659fddcabb64736f6c63430008040033";

type TransferAttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferAttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferAttack__factory extends ContractFactory {
  constructor(...args: TransferAttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TransferAttack";
  }

  deploy(
    _kingOfEther: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransferAttack> {
    return super.deploy(
      _kingOfEther,
      overrides || {}
    ) as Promise<TransferAttack>;
  }
  getDeployTransaction(
    _kingOfEther: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_kingOfEther, overrides || {});
  }
  attach(address: string): TransferAttack {
    return super.attach(address) as TransferAttack;
  }
  connect(signer: Signer): TransferAttack__factory {
    return super.connect(signer) as TransferAttack__factory;
  }
  static readonly contractName: "TransferAttack";
  public readonly contractName: "TransferAttack";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferAttackInterface {
    return new utils.Interface(_abi) as TransferAttackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferAttack {
    return new Contract(address, _abi, signerOrProvider) as TransferAttack;
  }
}
