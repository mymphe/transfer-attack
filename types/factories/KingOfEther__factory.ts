/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KingOfEther, KingOfEtherInterface } from "../KingOfEther";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotEnoughEther",
    type: "error",
  },
  {
    inputs: [],
    name: "becomeRichest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mostSent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "richest",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506102748061005a6000396000f3fe6080604052600436106100345760003560e01c806302e26c38146100395780636886bf1c1461006457806369934ee71461008f575b600080fd5b34801561004557600080fd5b5061004e610099565b60405161005b91906101cc565b60405180910390f35b34801561007057600080fd5b506100796100bd565b60405161008691906101e7565b60405180910390f35b6100976100c3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60015434116100fe576040517f8a0d377900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610164573d6000803e3d6000fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550565b6101b781610202565b82525050565b6101c681610234565b82525050565b60006020820190506101e160008301846101ae565b92915050565b60006020820190506101fc60008301846101bd565b92915050565b600061020d82610214565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600081905091905056fea264697066735822122099fb171e712c6f63694d59fbabd7b213c7a5608108c662b402dcd66df780b96e64736f6c63430008040033";

type KingOfEtherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KingOfEtherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KingOfEther__factory extends ContractFactory {
  constructor(...args: KingOfEtherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KingOfEther";
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<KingOfEther> {
    return super.deploy(overrides || {}) as Promise<KingOfEther>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KingOfEther {
    return super.attach(address) as KingOfEther;
  }
  connect(signer: Signer): KingOfEther__factory {
    return super.connect(signer) as KingOfEther__factory;
  }
  static readonly contractName: "KingOfEther";
  public readonly contractName: "KingOfEther";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KingOfEtherInterface {
    return new utils.Interface(_abi) as KingOfEtherInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KingOfEther {
    return new Contract(address, _abi, signerOrProvider) as KingOfEther;
  }
}
